version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./volumes/grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring-net
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,marcusolsson-json-datasource
      - GF_EXPLORE_ENABLED=true
      - GF_SERVER_ENABLE_GZIP=true

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring-net

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    pid: "host"
    network_mode: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - --no-collector.mdadm
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    network_mode: "host"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring-net

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /etc/promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki
    networks:
      - monitoring-net

  # postgres_exporter_school_db:
  #   image: prometheuscommunity/postgres-exporter:latest
  #   container_name: postgres_exporter_school_db
  #   environment:
  #     DATA_SOURCE_NAME: "postgresql://${DB1_USER}:${DB1_PASS}@${DB1_HOST}:5432/${DB1_NAME}?sslmode=disable"
  #   ports:
  #     - "9188:9187"
  #   env_file:
  #     - .env
  #   networks:
  #     - monitoring-net

  # postgres_exporter_skeduler_db:
  #   image: prometheuscommunity/postgres-exporter:latest
  #   container_name: postgres_exporter_skeduler_db
  #   environment:
  #     DATA_SOURCE_NAME: "postgresql://${DB2_USER}:${DB2_PASS}@${DB2_HOST}:5432/${DB2_NAME}?sslmode=disable"
  #   ports:
  #     - "9189:9187"
  #   env_file:
  #     - .env
  #   networks:
  #     - monitoring-net

  # nginx_exporter:
  #   image: nginx/nginx-prometheus-exporter:latest
  #   container_name: nginx_exporter
  #   command:
  #     - '-nginx.scrape-uri=http://localhost:8080/nginx_status'
  #   networks:
  #     - monitoring-net

networks:
  monitoring-net:
    name: monitoring-net
    driver: bridge
